version: '2'
volumes:
  postgresql:
    external: true

services:
  lampaderum-node:
    image: node:14.15.0-stretch
    mem_limit: 1G
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=dev,swagger
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/eureka
      - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/config
      - SPRING_DATASOURCE_URL=jdbc:postgresql://lampaderum-postgresql:5432/Lampaderum
    ports:
      - 9060:9060
      - 9000:9000
      - 3001:3001
      - 4200/tcp
      - 8080/tcp
    entrypoint: sh -c "cd /app && npm install && npm start"
    volumes:
      - ../../../:/app/:rw
    depends_on:
      - 'lampaderum-app'

  lampaderum-app:
    build:
      context: .
      dockerfile: lampaderum-dev-springboot.dockerfile
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=dev,swagger
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/eureka
      - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/config
      - SPRING_DATASOURCE_URL=jdbc:postgresql://lampaderum-postgresql:5432/Lampaderum
      - JHIPSTER_SLEEP=30 # gives time for other services to boot before the application
    ports:
      - 8080:8080
    depends_on:
      - 'lampaderum-postgresql'
      - 'jhipster-registry'
    volumes:
      - ../../../:/app/

  lampaderum-postgresql:
    extends:
      file: postgresql.yml
      service: lampaderum-postgresql

  jhipster-registry:
    extends:
      file: jhipster-registry.yml
      service: jhipster-registry
    environment:
      - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=native
      - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_LOCATIONS=file:./central-config/docker-config/
